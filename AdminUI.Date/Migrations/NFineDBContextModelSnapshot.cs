// <auto-generated />
using System;
using AdminUI.Date.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdminUI.Date.Migrations
{
    [DbContext(typeof(NFineDBContext))]
    partial class NFineDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AdminUI.Date.Models.Sys_Area", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime")
                        .HasComment("创建日期");

                    b.Property<string>("F_CreatorUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("创建用户主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("删除标志");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<string>("F_DeleteUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("删除用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_Description")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("描述")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_EnCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("编码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("有效标志");

                    b.Property<string>("F_FullName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime")
                        .HasComment("最后修改时间");

                    b.Property<string>("F_LastModifyUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("最后修改用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_Layers")
                        .HasColumnType("int")
                        .HasComment("层次");

                    b.Property<string>("F_ParentId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("父级")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_SimpleSpelling")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("简拼")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int")
                        .HasComment("排序码");

                    b.HasKey("F_Id")
                        .HasName("PK_SYS_AREA")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Sys_Area");

                    b.HasComment("行政区域表");
                });

            modelBuilder.Entity("AdminUI.Date.Models.Sys_DbBackup", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("备份主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_BackupTime")
                        .HasColumnType("datetime")
                        .HasComment("备份时间");

                    b.Property<string>("F_BackupType")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("备份类型")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<string>("F_CreatorUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("创建用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_DbName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("数据库名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("删除标志");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<string>("F_DeleteUserId")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("删除用户")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_Description")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("描述")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("有效标志");

                    b.Property<string>("F_FileName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("文件名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_FilePath")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("文件路径")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_FileSize")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("文件大小")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime")
                        .HasComment("最后修改时间");

                    b.Property<string>("F_LastModifyUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("最后修改用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int")
                        .HasComment("排序码");

                    b.HasKey("F_Id")
                        .HasName("PK_SYS_DBBACKUP")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Sys_DbBackup");

                    b.HasComment("数据库备份");
                });

            modelBuilder.Entity("AdminUI.Date.Models.Sys_FilterIP", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("过滤主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<string>("F_CreatorUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("创建用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("删除标志");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<string>("F_DeleteUserId")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("删除用户")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_Description")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("描述")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("有效标志");

                    b.Property<string>("F_EndIP")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("结束IP")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime")
                        .HasComment("最后修改时间");

                    b.Property<string>("F_LastModifyUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("最后修改用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int")
                        .HasComment("排序码");

                    b.Property<string>("F_StartIP")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("开始IP")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_Type")
                        .HasColumnType("tinyint(1)")
                        .HasComment("类型");

                    b.HasKey("F_Id")
                        .HasName("PK_SYS_FILTERIP")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Sys_FilterIP");

                    b.HasComment("过滤IP");
                });

            modelBuilder.Entity("AdminUI.Date.Models.Sys_Items", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("主表主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime")
                        .HasComment("创建日期");

                    b.Property<string>("F_CreatorUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("创建用户主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("删除标志");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<string>("F_DeleteUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("删除用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_Description")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("描述")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_EnCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("编码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("有效标志");

                    b.Property<string>("F_FullName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_IsTree")
                        .HasColumnType("tinyint(1)")
                        .HasComment("树型");

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime")
                        .HasComment("最后修改时间");

                    b.Property<string>("F_LastModifyUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("最后修改用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_Layers")
                        .HasColumnType("int")
                        .HasComment("层次");

                    b.Property<string>("F_ParentId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("父级")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int")
                        .HasComment("排序码");

                    b.HasKey("F_Id")
                        .HasName("PK_SYS_ITEMS")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Sys_Items");

                    b.HasComment("选项主表");
                });

            modelBuilder.Entity("AdminUI.Date.Models.Sys_ItemsDetail", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("明细主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime")
                        .HasComment("创建日期");

                    b.Property<string>("F_CreatorUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("创建用户主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("删除标志");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<string>("F_DeleteUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("删除用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_Description")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("描述")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("有效标志");

                    b.Property<bool?>("F_IsDefault")
                        .HasColumnType("tinyint(1)")
                        .HasComment("默认");

                    b.Property<string>("F_ItemCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("编码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_ItemId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("主表主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_ItemName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime")
                        .HasComment("最后修改时间");

                    b.Property<string>("F_LastModifyUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("最后修改用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_Layers")
                        .HasColumnType("int")
                        .HasComment("层次");

                    b.Property<string>("F_ParentId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("父级")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_SimpleSpelling")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("简拼")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int")
                        .HasComment("排序码");

                    b.HasKey("F_Id")
                        .HasName("PK_SYS_ITEMDETAIL")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Sys_ItemsDetail");

                    b.HasComment("选项明细表");
                });

            modelBuilder.Entity("AdminUI.Date.Models.Sys_Log", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("日志主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_Account")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("用户名")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<string>("F_CreatorUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("创建用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_Date")
                        .HasColumnType("datetime")
                        .HasComment("日期");

                    b.Property<string>("F_Description")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("描述")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_IPAddress")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("IP地址")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_IPAddressName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("IP所在城市")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_ModuleId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("系统模块Id")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_ModuleName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("系统模块")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_NickName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("姓名")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_Result")
                        .HasColumnType("tinyint(1)")
                        .HasComment("结果");

                    b.Property<string>("F_Type")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("类型")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("F_Id")
                        .HasName("PK_SYS_LOG")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Sys_Log");

                    b.HasComment("系统日志");
                });

            modelBuilder.Entity("AdminUI.Date.Models.Sys_Module", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("模块主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_AllowDelete")
                        .HasColumnType("tinyint(1)")
                        .HasComment("允许删除");

                    b.Property<bool?>("F_AllowEdit")
                        .HasColumnType("tinyint(1)")
                        .HasComment("允许编辑");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime")
                        .HasComment("创建日期");

                    b.Property<string>("F_CreatorUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("创建用户主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("删除标志");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<string>("F_DeleteUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("删除用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_Description")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("描述")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_EnCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("编码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("有效标志");

                    b.Property<string>("F_FullName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_Icon")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("图标")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_IsExpand")
                        .HasColumnType("tinyint(1)")
                        .HasComment("展开");

                    b.Property<bool?>("F_IsMenu")
                        .HasColumnType("tinyint(1)")
                        .HasComment("菜单");

                    b.Property<bool?>("F_IsPublic")
                        .HasColumnType("tinyint(1)")
                        .HasComment("公共");

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime")
                        .HasComment("最后修改时间");

                    b.Property<string>("F_LastModifyUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("最后修改用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_Layers")
                        .HasColumnType("int")
                        .HasComment("层次");

                    b.Property<string>("F_ParentId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("父级")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int")
                        .HasComment("排序码");

                    b.Property<string>("F_Target")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("目标")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_UrlAddress")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("连接")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("F_Id")
                        .HasName("PK_SYS_MODULE")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Sys_Module");

                    b.HasComment("系统模块");
                });

            modelBuilder.Entity("AdminUI.Date.Models.Sys_ModuleButton", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("按钮主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_AllowDelete")
                        .HasColumnType("tinyint(1)")
                        .HasComment("允许删除");

                    b.Property<bool?>("F_AllowEdit")
                        .HasColumnType("tinyint(1)")
                        .HasComment("允许编辑");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime")
                        .HasComment("创建日期");

                    b.Property<string>("F_CreatorUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("创建用户主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("删除标志");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<string>("F_DeleteUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("删除用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_Description")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("描述")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_EnCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("编码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("有效标志");

                    b.Property<string>("F_FullName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_Icon")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("图标")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_IsPublic")
                        .HasColumnType("tinyint(1)")
                        .HasComment("公共");

                    b.Property<string>("F_JsEvent")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("事件")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime")
                        .HasComment("最后修改时间");

                    b.Property<string>("F_LastModifyUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("最后修改用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_Layers")
                        .HasColumnType("int")
                        .HasComment("层次");

                    b.Property<int?>("F_Location")
                        .HasColumnType("int")
                        .HasComment("位置");

                    b.Property<string>("F_ModuleId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("模块主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_ParentId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("父级")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int")
                        .HasComment("排序码");

                    b.Property<bool?>("F_Split")
                        .HasColumnType("tinyint(1)")
                        .HasComment("分开线");

                    b.Property<string>("F_UrlAddress")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("连接")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("F_Id")
                        .HasName("PK_SYS_MODULEBUTTON")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Sys_ModuleButton");

                    b.HasComment("模块按钮");
                });

            modelBuilder.Entity("AdminUI.Date.Models.Sys_ModuleForm", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("表单主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<string>("F_CreatorUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("创建用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("删除标志");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<string>("F_DeleteUserId")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("删除用户")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_Description")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("描述")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_EnCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("编码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("有效标志");

                    b.Property<string>("F_FormJson")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasComment("表单控件Json")
                        .IsUnicode(false);

                    b.Property<string>("F_FullName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime")
                        .HasComment("最后修改时间");

                    b.Property<string>("F_LastModifyUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("最后修改用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_ModuleId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("模块主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int")
                        .HasComment("排序码");

                    b.HasKey("F_Id")
                        .HasName("PK_SYS_MODULEFORM")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Sys_ModuleForm");

                    b.HasComment("模块表单");
                });

            modelBuilder.Entity("AdminUI.Date.Models.Sys_ModuleFormInstance", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("表单实例主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<string>("F_CreatorUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("创建用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_FormId")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("表单主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_InstanceJson")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasComment("表单实例Json")
                        .IsUnicode(false);

                    b.Property<string>("F_ObjectId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("对象主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int")
                        .HasComment("排序码");

                    b.HasKey("F_Id")
                        .HasName("PK_SYS_MODULEFORMINSTANCE")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Sys_ModuleFormInstance");

                    b.HasComment("模块表单实例");
                });

            modelBuilder.Entity("AdminUI.Date.Models.Sys_Organize", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("组织主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_Address")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("联系地址")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<bool?>("F_AllowDelete")
                        .HasColumnType("tinyint(1)")
                        .HasComment("允许删除");

                    b.Property<bool?>("F_AllowEdit")
                        .HasColumnType("tinyint(1)")
                        .HasComment("允许编辑");

                    b.Property<string>("F_AreaId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("归属区域")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_CategoryId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("分类")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<string>("F_CreatorUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("创建用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("删除标志");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<string>("F_DeleteUserId")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("删除用户")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_Description")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("描述")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_Email")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("邮箱")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_EnCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("编码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("有效标志");

                    b.Property<string>("F_Fax")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasComment("传真")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("F_FullName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime")
                        .HasComment("最后修改时间");

                    b.Property<string>("F_LastModifyUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("最后修改用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_Layers")
                        .HasColumnType("int")
                        .HasComment("层次");

                    b.Property<string>("F_ManagerId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("负责人")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_MobilePhone")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasComment("手机")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("F_ParentId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("父级")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_ShortName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("简称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int")
                        .HasComment("排序码");

                    b.Property<string>("F_TelePhone")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasComment("电话")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("F_WeChat")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("微信")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("F_Id")
                        .HasName("PK_SYS_ORGANIZE")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Sys_Organize");

                    b.HasComment("组织表");
                });

            modelBuilder.Entity("AdminUI.Date.Models.Sys_Role", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("角色主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_AllowDelete")
                        .HasColumnType("tinyint(1)")
                        .HasComment("允许删除");

                    b.Property<bool?>("F_AllowEdit")
                        .HasColumnType("tinyint(1)")
                        .HasComment("允许编辑");

                    b.Property<int?>("F_Category")
                        .HasColumnType("int")
                        .HasComment("分类:1-角色2-岗位");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<string>("F_CreatorUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("创建用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("删除标志");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<string>("F_DeleteUserId")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("删除用户")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_Description")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("描述")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_EnCode")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("编号")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("有效标志");

                    b.Property<string>("F_FullName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("名称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime")
                        .HasComment("最后修改时间");

                    b.Property<string>("F_LastModifyUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("最后修改用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_OrganizeId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("组织主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int")
                        .HasComment("排序码");

                    b.Property<string>("F_Type")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("类型")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("F_Id")
                        .HasName("PK_SYS_ROLE")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Sys_Role");

                    b.HasComment("角色表");
                });

            modelBuilder.Entity("AdminUI.Date.Models.Sys_RoleAuthorize", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("角色授权主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<string>("F_CreatorUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("创建用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_ItemId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("项目主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_ItemType")
                        .HasColumnType("int")
                        .HasComment("项目类型1-模块2-按钮3-列表");

                    b.Property<string>("F_ObjectId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("对象主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("F_ObjectType")
                        .HasColumnType("int")
                        .HasComment("对象分类1-角色2-部门-3用户");

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int")
                        .HasComment("排序码");

                    b.HasKey("F_Id")
                        .HasName("PK_SYS_ROLEAUTHORIZE")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Sys_RoleAuthorize");

                    b.HasComment("角色授权表");
                });

            modelBuilder.Entity("AdminUI.Date.Models.Sys_User", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("用户主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_Account")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("账户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_Birthday")
                        .HasColumnType("datetime")
                        .HasComment("生日");

                    b.Property<DateTime?>("F_CreatorTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<string>("F_CreatorUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("创建用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_DeleteMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("删除标志");

                    b.Property<DateTime?>("F_DeleteTime")
                        .HasColumnType("datetime")
                        .HasComment("删除时间");

                    b.Property<string>("F_DeleteUserId")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("删除用户")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_DepartmentId")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("部门主键")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_Description")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("描述")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_DutyId")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("岗位主键")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("F_Email")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("邮箱")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_EnabledMark")
                        .HasColumnType("tinyint(1)")
                        .HasComment("有效标志");

                    b.Property<bool?>("F_Gender")
                        .HasColumnType("tinyint(1)")
                        .HasComment("性别");

                    b.Property<string>("F_HeadIcon")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("头像")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_IsAdministrator")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否管理员");

                    b.Property<DateTime?>("F_LastModifyTime")
                        .HasColumnType("datetime")
                        .HasComment("最后修改时间");

                    b.Property<string>("F_LastModifyUserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("最后修改用户")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_ManagerId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("主管主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_MobilePhone")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasComment("手机")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("F_NickName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("呢称")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_OrganizeId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("组织主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_RealName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("姓名")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_RoleId")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("角色主键")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int?>("F_SecurityLevel")
                        .HasColumnType("int")
                        .HasComment("安全级别");

                    b.Property<string>("F_Signature")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("个性签名")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int?>("F_SortCode")
                        .HasColumnType("int")
                        .HasComment("排序码");

                    b.Property<string>("F_UserPassword")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("F_WeChat")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("微信")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("F_Id")
                        .HasName("PK_SYS_USER")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Sys_User");

                    b.HasComment("用户表");
                });

            modelBuilder.Entity("AdminUI.Date.Models.Sys_UserLogOn", b =>
                {
                    b.Property<string>("F_Id")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("用户登录主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_AllowEndTime")
                        .HasColumnType("datetime")
                        .HasComment("允许登录时间结束");

                    b.Property<DateTime?>("F_AllowStartTime")
                        .HasColumnType("datetime")
                        .HasComment("允许登录时间开始");

                    b.Property<string>("F_AnswerQuestion")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasComment("密码提示答案")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_ChangePasswordDate")
                        .HasColumnType("datetime")
                        .HasComment("最后修改密码日期");

                    b.Property<bool?>("F_CheckIPAddress")
                        .HasColumnType("tinyint(1)")
                        .HasComment("是否访问限制");

                    b.Property<DateTime?>("F_FirstVisitTime")
                        .HasColumnType("datetime")
                        .HasComment("第一次访问时间");

                    b.Property<string>("F_Language")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("系统语言")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("F_LastVisitTime")
                        .HasColumnType("datetime")
                        .HasComment("最后访问时间");

                    b.Property<DateTime?>("F_LockEndDate")
                        .HasColumnType("datetime")
                        .HasComment("暂停用户结束日期");

                    b.Property<DateTime?>("F_LockStartDate")
                        .HasColumnType("datetime")
                        .HasComment("暂停用户开始日期");

                    b.Property<int?>("F_LogOnCount")
                        .HasColumnType("int")
                        .HasComment("登录次数");

                    b.Property<bool?>("F_MultiUserLogin")
                        .HasColumnType("tinyint(1)")
                        .HasComment("允许同时有多用户登录");

                    b.Property<DateTime?>("F_PreviousVisitTime")
                        .HasColumnType("datetime")
                        .HasComment("上一次访问时间");

                    b.Property<string>("F_Question")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("密码提示问题")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_Theme")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("系统样式")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_UserId")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("用户主键")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("F_UserOnLine")
                        .HasColumnType("tinyint(1)")
                        .HasComment("在线状态");

                    b.Property<string>("F_UserPassword")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("用户密码")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("F_UserSecretkey")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasComment("用户秘钥")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("F_Id")
                        .HasName("PK_SYS_USERLOGON")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Sys_UserLogOn");

                    b.HasComment("用户登录信息表");
                });

            modelBuilder.Entity("AdminUI.Date.Models.mstb_monitorcurrent", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Address_Index")
                        .IsRequired()
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4");

                    b.Property<string>("Ip_Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Monitor_Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Monitor_Time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Monitor_Value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Unit")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.ToTable("mstb_monitorcurrent");
                });

            modelBuilder.Entity("AdminUI.Date.Models.mstb_monitorhistory", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Address_Index")
                        .IsRequired()
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4");

                    b.Property<string>("Ip_Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Monitor_Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Monitor_Time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Monitor_Value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Unit")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.ToTable("mstb_monitorhistory");
                });

            modelBuilder.Entity("AdminUI.Date.Models.mstb_monitorstate", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Address_Index")
                        .IsRequired()
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4");

                    b.Property<string>("Ip_Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Monitor_Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Monitor_Time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("State")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.ToTable("mstb_monitorstate");
                });
#pragma warning restore 612, 618
        }
    }
}
